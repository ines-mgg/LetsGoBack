### GET request to the root endpoint
GET http://localhost:8080

### POST request to register with valid body
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "username": "John Doe",
    "email": "john@example.com",
    "password": "passwordNotSecure"
}

### POST request to register with invalid body
POST http://localhost:8080/auth/register
Content-Type: application/json

{
    "username": "John Doe",
    "email": "john@example.com",
    "password": 123
}

### POST request to login with valid body (user)
POST http://localhost:8080/auth/login
Content-Type: application/json

{
    "username": "John Doe",
    "password": "passwordNotSecure"
}

### POST request to login with valid body (admin)
POST http://localhost:8080/auth/login
Content-Type: application/json

{
    "username": "user1",
    "password": "password1"
}

### POST request to register with invalid body
POST http://localhost:8080/auth/login
Content-Type: application/json

{
    "username": "John Doe",
    "email": "john@example.com"
}

### GET request to get all products
GET http://localhost:8080/products
Content-Type: application/json

### GET request to get a product by ID
GET http://localhost:8080/products/1
Content-Type: application/json

### POST request to create a product (with JWT)
POST http://localhost:8080/products
Content-Type: application/json
# Replace `Authorization` header with your JWT token | you need to be logged in as an admin to create a product
Authorization: Bearer <your_jwt_token>

{
    "name": "Product test",
    "description": "Product description",
    "price": 42.5,
    "stock": 10
}

### PUT request to update a product (with JWT)
PUT http://localhost:8080/products/1
Content-Type: application/json
# Replace `Authorization` header with your JWT token | you need to be logged in as an admin to update a product
Authorization: Bearer <your_jwt_token>

{
    "name": "Product test updated",
    "description": "Product description updated",
    "price": 42.5,
    "stock": 10
}

### PUT request to update a product pictures (with JWT)
PUT http://localhost:8080/products/1/pictures
# Replace `Authorization` header with your JWT token | you need to be logged in as an admin to update a product pictures
Authorization: Bearer <your_jwt_token>
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="files"; filename="image1.jpg"
Content-Type: image/jpeg

# You can replace `image1.jpg` with the path to your image file
< image1.jpg
--boundary

--boundary
Content-Disposition: form-data; name="files"; filename="image2.jpg"
Content-Type: image/jpeg

# You can replace `image2.jpg` with the path to your image file
< image2.jpg
--boundary


### DELETE request to delete a product (with JWT)
DELETE http://localhost:8080/products/1
Content-Type: application/json
# Replace `Authorization` header with your JWT token | you need to be logged in as an admin to delete a product
Authorization: Bearer <your_jwt_token>

### GET request to get connected user profile (with JWT)
GET http://localhost:8080/profile
Content-Type: application/json
# Replace `Authorization` header with your JWT token
Authorization: Bearer <your_jwt_token>

### PUT request to update connected user profile (with JWT)
PUT http://localhost:8080/profile
Content-Type: application/json
# Replace `Authorization` header with your JWT token
Authorization: Bearer <your_jwt_token>

{
    "username": "Jane Doe",
    "email": "jane@example.com"
}

### PUT request to update connected user password (with JWT)
PUT http://localhost:8080/profile/change-password
Content-Type: application/json
# Replace `Authorization` header with your JWT token
Authorization: Bearer <your_jwt_token>

{
    "oldPassword": "passwordNotSecure",
    "newPassword": "newPasswordSecure"
}

### PUT request to update connected user profile picture (with JWT)
PUT http://localhost:8080/profile/profile-picture
Authorization: Bearer <your_jwt_token>
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="file"; filename="image.jpg"
Content-Type: image/jpeg

# You can replace `image.jpg` with the path to your image file
< image.jpg
--boundary

### DELETE request to delete connected user profile (with JWT)
DELETE http://localhost:8080/profile
Content-Type: application/json
# Replace `Authorization` header with your JWT token
Authorization: Bearer <your_jwt_token>
